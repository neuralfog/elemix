"use strict";var S=Object.defineProperty;var E=(i,e,s)=>e in i?S(i,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):i[e]=s;var h=(i,e,s)=>E(i,typeof e!="symbol"?e+"":e,s);Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const l=require("./utils-CtrnV8Od.js"),M=i=>{const e=i;return e.$cache||(e.$cache={template:new Map}),e.$cache};class H{constructor(e,s){h(this,"key","");this.strings=e,this.values=s}}class L{constructor(e,s){this.node=e,this.definition=s}setValue(e){const s=this.definition.name.slice(1);this.node[s]=e}}class v{constructor(e,s){this.node=e,this.definition=s}setValue(e){const s=this.definition.name.slice(1);this.node[`on${s}`]=e}}class I{constructor(e,s){this.node=e,this.definition=s}setValue(e){const s=t=>{e.value=t.target.value};this.node.oninput||(this.node.value=e.value,this.node.oninput=s)}}class V{constructor(e,s){this.node=e,this.definition=s}setValue(e){const s=this.definition.name.slice(1),t=this.node;t.$props&&t.$props.set(s,e)}}let $=class{constructor(e,s){this.node=e,this.definition=s}setValue(e){this.node.setAttribute(this.definition.name,String(e))}};const C=(i,e)=>{const s=/(\S+)(?==(?:["']?)$)/,t=i.match(s);if(t){const n={index:e,name:t[1],value:l.makeMarkerComment(e),virtual:!1,type:l.Attributes.STD};switch(t[1][0]){case"@":return n.type=l.Attributes.EVENT,n.virtual=!0,n;case":":return n.type=l.Attributes.PROP,n.virtual=!0,n;case".":return n.type=l.Attributes.DIRECT,n.virtual=!0,n;case"~":return t[1].startsWith("~model")&&(n.type=l.Attributes.MODEL,n.virtual=!0),n;default:return n}}},x=(i,e)=>{const s=i.querySelector(O(e.name,e.value,e.virtual));if(s)switch(e.virtual&&s.removeAttribute(e.name),e.type){case l.Attributes.EVENT:return new v(s,e);case l.Attributes.PROP:return new V(s,e);case l.Attributes.DIRECT:return new L(s,e);case l.Attributes.MODEL:return new I(s,e);default:return new $(s,e)}},O=(i,e,s)=>s?`[\\${i}='${e}']`:`[${i}='${e}']`,P=(i,e)=>{const s=i.length,t=e.length,n=Object.create(null);let r,c,o;for(r=0;r<s;r++)c=i[r].key,n[c]=r;const a=new Array(t),d=[],u=[],y=Object.create(null);for(r=0;r<t;r++){const N=e[r].key;y[N]=!0;const g=n[N];g===void 0?a[r]=-1:(a[r]=g,d.push(g),u.push(r))}const T=R(d),m=new Array(t);for(r=0;r<t;r++)m[r]=!1;const A=T.length;for(r=0;r<A;r++)m[u[T[r]]]=!0;const b=[],w=[],k=[];for(r=0;r<s;r++)o=i[r].key,y[o]!==!0&&b.push({key:o});for(r=0;r<t;r++){o=e[r].key;const f=r+1<t?e[r+1].key:void 0;a[r]===-1?w.push({key:o,value:e[r],beforeKey:f}):m[r]||k.push({key:o,beforeKey:f})}return{deletes:b,inserts:w,moves:k}},R=i=>{const e=i.length,s=new Array(e),t=[];let n,r,c,o;for(n=0;n<e;n++){for(r=0,c=t.length;r<c;)o=r+c>>>1,i[t[o]]<i[n]?r=o+1:c=o;r===t.length?t.push(n):t[r]=n,s[n]=r>0?t[r-1]:-1}const a=t.length,d=new Array(a);let u=t[a-1];for(n=a-1;n>=0;n--)d[n]=u,u=s[u];return d};class F{constructor(e){h(this,"cache",{listTemplate:new Map,listNodes:new Map,listHtmlTemplate:[]});this.commentNode=e}renderListElement(e,s){if(!this.commentNode)throw new Error("renderList method needs to accept instance of HTMLElement");if(!e.key)throw new Error("use repeat directive when rendering the lists");let t=this.cache.listTemplate.get(e.key);return t||(t=new p(e),this.cache.listTemplate.set(e.key,t),t.mountListElement(this.commentNode,e.key,e.values,this.cache,s)),t}renderAllItems(e){const s=e.length;for(let t=0;t<s;t++)this.renderListElement(e[t]).update(e[t].values)}emptyList(){for(const[,e]of this.cache.listNodes)e.remove();this.cache.listTemplate.clear(),this.cache.listNodes.clear()}deleteNodes(e){const s=e.length;for(let t=s-1;t>=0;t--){const n=this.cache.listNodes.get(e[t].key);n&&n.remove(),this.cache.listNodes.delete(e[t].key),this.cache.listTemplate.delete(e[t].key)}}moveNodes(e){const s=e.length;for(let t=s-1;t>=0;t--){const n=this.cache.listNodes.get(e[t].key),r=this.cache.listNodes.get(e[t].beforeKey);n&&r&&(r==null||r.before(n)),!r&&n&&this.commentNode.before(n)}}insertNodes(e){const s=e.length;for(let t=s-1;t>=0;t--){const n=this.cache.listNodes.get(e[t].beforeKey);this.renderListElement(e[t].value,n)}}updateAllItems(e){const s=e.length;for(let t=0;t<s;t++){const n=this.cache.listTemplate.get(e[t].key);n==null||n.update(e[t].values)}}render(e){if(!this.cache.listHtmlTemplate.length){this.renderAllItems(e),this.cache.listHtmlTemplate=e;return}if(!e.length){this.emptyList(),this.cache.listHtmlTemplate=e;return}const{deletes:s,inserts:t,moves:n}=P(this.cache.listHtmlTemplate,e);if(s.length===e.length||t.length===e.length){this.emptyList(),this.renderAllItems(e),this.cache.listHtmlTemplate=e;return}s.length&&this.deleteNodes(s),n.length&&this.moveNodes(n),t.length&&this.insertNodes(t),this.updateAllItems(e),this.cache.listHtmlTemplate=e}}class D{constructor(e){h(this,"renderer");this.commentNode=e,this.renderer=new F(e)}setValue(e){this.renderer.render(e)}}class K{constructor(e){h(this,"node",document.createTextNode(""));this.commentNode=e,e.before(this.node)}setValue(e){const s=e!=null?String(e):"";this.node.textContent!==s&&(this.node.textContent=s)}}class q{constructor(e){h(this,"cache",{nodes:[]});this.commentNode=e}removeNodes(){if(!this.cache.nodes.length)return;const e=this.cache.nodes.length;for(let s=0;s<e;s++)this.cache.nodes[s].remove();this.cache.nodes=[]}render(e){this.cache.strings!==e.strings&&(this.cache.fragment=void 0,this.removeNodes()),this.cache.fragment||(this.cache.fragment=new p(e),this.cache.strings=e.strings,this.cache.nodes=this.cache.fragment.mountTemplate(this.commentNode,e.values)),this.cache.fragment.update(e.values)}}class j{constructor(e){h(this,"renderer");this.commentNode=e,this.renderer=new q(e)}setValue(e){this.renderer.render(e)}}const W=(i,e)=>Array.isArray(i)?new D(e):i instanceof H?new j(e):new K(e);class p{constructor(e){h(this,"holes",new Map);h(this,"htmlString","");h(this,"attributeMap",[]);this.parse(e.strings)}parse(e){const s=e.length;for(let t=0;t<s;t++)if(this.htmlString+=e[t],t<e.length-1){const n=C(this.htmlString,t);n&&this.attributeMap.push(n),this.htmlString+=l.makeMarkerComment(t)}this.htmlString=l.fixSelfClosingTags(this.htmlString),this.htmlString=l.fixAttributeQuotes(this.htmlString)}initFragment(){const e=document.createElement("template");return e.innerHTML=this.htmlString,e.content}hydrateAttributes(e){const s=this.attributeMap.length;for(let t=0;t<s;t++){const n=x(e,this.attributeMap[t]);n&&this.holes.set(this.attributeMap[t].index,n)}return e}hydrateTemplateHoles(e,s){var n;const t=document.createTreeWalker(e,NodeFilter.SHOW_COMMENT,null);for(;t.nextNode();){const r=t.currentNode;if((n=r.nodeValue)!=null&&n.includes(l.TEMPLATE_MARKER_GLYPH)){const c=l.getIndexFromComment(r.nodeValue),o=W(s[c],r);this.holes.set(c,o)}}return e}mount(e,s){const t=this.initFragment();this.hydrateTemplateHoles(t,s),this.hydrateAttributes(t),e.appendChild(t)}mountTemplate(e,s){const t=this.initFragment();this.hydrateTemplateHoles(t,s),this.hydrateAttributes(t);const n=Array.from(t.childNodes);return e.before(t),n}mountListElement(e,s,t,n,r){const c=this.initFragment();this.hydrateTemplateHoles(c,t),this.hydrateAttributes(c),r&&r.before(c),e.before(c);const o=r?r.previousSibling:e.previousSibling;o&&n&&n.listNodes.set(s,o)}update(e){for(const[s,t]of this.holes)t.setValue(e[s])}}const _=(i,...e)=>new H(i,e),G=(i,e)=>{if(!e)throw new Error("render method needs to accept instance of HTMLElement");const s=M(e);let t=s.template.get(i.strings);t||(t=new p(i),s.template.set(i.strings,t),t.mount(e,i.values)),t.update(i.values)};exports.html=_;exports.render=G;
