import type { HtmlTemplate } from './HtmlTemplate';
import type { Hole } from './holes/Hole';
import type { RenderCache } from './render/ListRenderer';
import type { AttributeHole } from './holes/attributes/AttributeHole';
export declare class TemplateFragment {
    holes: Map<number, AttributeHole | Hole>;
    private htmlString;
    private attributeMap;
    constructor(template: HtmlTemplate);
    private parse;
    private initFragment;
    private hydrateAttributes;
    private hydrateTemplateHoles;
    mount(container: HTMLElement | ParentNode, values: unknown[]): void;
    mountTemplate(node: Comment, values: unknown[]): ChildNode[];
    mountListElement(commentNode: Comment, itemKey: string, values: unknown[], cache: RenderCache, beforeNode?: ChildNode): void;
    update(values: unknown[]): void;
}
